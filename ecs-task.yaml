Description: 
    ECS TaskDefinition to be deployed in devops-test-ecs cluster.
Parameters: 

    VPC:
        Description: The VPC that the ECS cluster is deployed to
        Type: AWS::EC2::VPC::Id

    EnvironmentName:
        Description: Environment to be deployed into
        Type: String

    Cluster:
        Description: ECS Cluster Name
        Type: String

    DesiredCount: 
        Description: Instances the task should be run across our cluster
        Type: Number

    Listener:
        Description: The Application Load Balancer listener to register with
        Type: String


    DockerImage:    
        Description: Repo, Image and Tag of the docker image to deploy.
        Type: String
        Default: $AWS_ACCOUNT_ID.dkr.ecr.eu-west-1.amazonaws.com/devops-test-ecs:$CIRCLE_SHA1

Resources:

    Service: 
        Type: AWS::ECS::Service
        DependsOn: ListenerRule
        Properties: 
            Cluster: !Ref Cluster
            Role: !Ref ServiceRole
            DesiredCount: !Ref DesiredCount
            TaskDefinition: !Ref TaskDefinition
            LoadBalancers: 
                - ContainerName: "devops-test-ecs"
                  ContainerPort: 3000
                  TargetGroupArn: !Ref TargetGroup

    TaskDefinition:
        Type: AWS::ECS::TaskDefinition
        Properties:
            Family: devops-test-ecs
            ContainerDefinitions:
                - Name: devops-test-ecs
                  Essential: true
                  Image: !Ref DockerImage
                  Memory: 256
                  PortMappings:
                    - ContainerPort: 3000

    TargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            Name: !Ref EnvironmentName
            VpcId: !Ref VPC
            Port: 80
            Protocol: HTTP
            Matcher: 
                HttpCode: 200-499
            HealthCheckIntervalSeconds: 60
            HealthCheckPath: /status
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 5
            HealthyThresholdCount: 2
            TargetGroupAttributes:
              - Key: deregistration_delay.timeout_seconds
                Value: 10

    ListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            ListenerArn: !Ref Listener
            Priority: 2
            Conditions:
                - Field: path-pattern   
                  Values: 
                    - /
            Actions:
                - TargetGroupArn: !Ref TargetGroup
                  Type: forward

    ServiceRole: 
        Type: AWS::IAM::Role
        Properties: 
            RoleName: !Sub ecs-service-${AWS::StackName}
            Path: /
            AssumeRolePolicyDocument: |
                {
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": { "Service": [ "ecs.amazonaws.com" ]},
                        "Action": [ "sts:AssumeRole" ]
                    }]
                }
            Policies: 
                - PolicyName: !Sub ecs-service-${AWS::StackName}
                  PolicyDocument: 
                    {
                        "Version": "2012-10-17",
                        "Statement": [{
                                "Effect": "Allow",
                                "Action": [
                                    "ec2:AuthorizeSecurityGroupIngress",
                                    "ec2:Describe*",
                                    "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                                    "elasticloadbalancing:Describe*",
                                    "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                                    "elasticloadbalancing:DeregisterTargets",
                                    "elasticloadbalancing:DescribeTargetGroups",
                                    "elasticloadbalancing:DescribeTargetHealth",
                                    "elasticloadbalancing:RegisterTargets"
                                ],
                                "Resource": "*"
                        }]
                    }
